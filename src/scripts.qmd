# Titan Files - Pillars

## Languages

## Projects

## CLoC

### Setup

### Script 00 (**The Imitation Game***) - GIT Clone BOT

This script is responsible for the local clone of the repositories (main/marster brach) that will be analyzed by CLoC, for this we use the previous projects' list.

*IMPORT*

```{python}
import git
import _00.input.Repos as repositories

```

*CODE*

```{python}
for repository in repositories.list:
    local_repo_directory = f"./_00/output/{repository.split('/')[-2]}_{repository.split('/')[-1]}"
    print(f"{repository.split('/')[-2]}/{repository.split('/')[-1]}", end="")

    try:
        try:
            repo = git.Repo.clone_from(repository, local_repo_directory, branch='main')
            print(" -> Main branch")
        except git.exc.GitCommandError:
            try:
                repo = git.Repo.clone_from(repository, local_repo_directory, branch='master')
                print(" -> Master branch")
            except git.exc.GitCommandError:
                print(" -> \033[31mNo Main/Master branches found\033[m")

    except git.exc.GitCommandError as e:
        print()
        if "already exists and is not an empty directory" in e.stderr:
            print("\033[31mDestination path already exists and is not an empty directory\033[m")
        else:
            print(f"\033[31mAn error occurred: {e}\033[m")

print('DONE!')

```

### Script 01 (**Sherlock Holmes**) - CLoC BOT

This script is responsible for automating the CLoC analysis for all clones made before.

*IMPORT*

```{python}
from os import path, listdir, system

```

*CODE*

```{python}

clones_folder = './src/_00/output'
output_folder = './src/_01/output'
CLoC_path = path.dirname(path.abspath("cloc.exe"))  # CLoc.exe path
system(f'cd {CLoc_path}')

for file in listdir(clones_folder):
    file_name = path.join(file)
    if path.exists(f'output/{file_name}.csv'):
        print(f"O arquivo {file_name}.csv já existe \n")
    else:
        system(f'cloc --by-file-by-lang --csv --out {output_folder}/{file_name}.csv {clones_folder}/{file_name}')
        print(f'\n Arquivo {file_name}.csv criado \n')
```